{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MapScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentLocation = _useState2[0],\n    setCurrentLocation = _useState2[1];\n  var backendUrl = \"https://location-tracker-rtl.onrender.com\";\n  useEffect(function () {\n    var startWatchingLocation = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status === \"granted\") {\n          var locationSubscriber = yield Location.watchPositionAsync({\n            accuracy: Location.Accuracy.BestForNavigation,\n            distanceInterval: 1\n          }, function () {\n            var _ref3 = _asyncToGenerator(function* (newLocation) {\n              var _newLocation$coords = newLocation.coords,\n                latitude = _newLocation$coords.latitude,\n                longitude = _newLocation$coords.longitude;\n              setCurrentLocation({\n                latitude: latitude,\n                longitude: longitude\n              });\n              sendLocationData({\n                latitude: latitude,\n                longitude: longitude\n              });\n            });\n            return function (_x) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n          return function () {\n            if (locationSubscriber) {\n              locationSubscriber.remove();\n            }\n          };\n        }\n      });\n      return function startWatchingLocation() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    startWatchingLocation();\n  }, []);\n  var sendLocationData = function () {\n    var _ref4 = _asyncToGenerator(function* (location) {\n      try {\n        console.log(\"Sending data to backend:\", location);\n        yield axios.post(`${backendUrl}/locations`, location);\n        console.log(\"Location data sent successfully!\");\n      } catch (error) {\n        console.error(\"Error sending location data:\", error.message);\n      }\n    });\n    return function sendLocationData(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(MapView, {\n      style: styles.map,\n      region: {\n        latitude: currentLocation ? currentLocation.latitude : 0,\n        longitude: currentLocation ? currentLocation.longitude : 0,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: currentLocation && _jsx(Marker, {\n        coordinate: currentLocation,\n        title: \"Your Location\"\n      })\n    }), currentLocation && _jsxs(Text, {\n      style: styles.locationText,\n      children: [\"Latitude: \", currentLocation.latitude, \", Longitude:\", \" \", currentLocation.longitude]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    flex: 1\n  },\n  locationText: {\n    padding: 16,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","MapView","Marker","Location","axios","jsx","_jsx","jsxs","_jsxs","MapScreen","_ref","navigation","_useState","_useState2","_slicedToArray","currentLocation","setCurrentLocation","backendUrl","startWatchingLocation","_ref2","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","locationSubscriber","watchPositionAsync","accuracy","Accuracy","BestForNavigation","distanceInterval","_ref3","newLocation","_newLocation$coords","coords","latitude","longitude","sendLocationData","_x","apply","arguments","remove","_ref4","location","console","log","post","error","message","_x2","style","styles","container","children","map","region","latitudeDelta","longitudeDelta","coordinate","title","locationText","create","flex","padding","textAlign"],"sources":["C:/Users/Asif Amin/Desktop/Location-Trackerrr/Locatio-Tracker/client/MapScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport * as Location from \"expo-location\";\r\nimport axios from \"axios\";\r\n\r\nexport default function MapScreen({ navigation }) {\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const backendUrl = \"https://location-tracker-rtl.onrender.com\";\r\n  useEffect(() => {\r\n    const startWatchingLocation = async () => {\r\n      const { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status === \"granted\") {\r\n        const locationSubscriber = await Location.watchPositionAsync(\r\n          {\r\n            accuracy: Location.Accuracy.BestForNavigation,\r\n            distanceInterval: 1, // Update location when the user has moved 1 meter\r\n          },\r\n          async (newLocation) => {\r\n            const { latitude, longitude } = newLocation.coords;\r\n            setCurrentLocation({ latitude, longitude });\r\n            sendLocationData({ latitude, longitude }); // Send location to the backend\r\n          }\r\n        );\r\n\r\n        return () => {\r\n          if (locationSubscriber) {\r\n            locationSubscriber.remove();\r\n          }\r\n        };\r\n      }\r\n    };\r\n\r\n    startWatchingLocation();\r\n  }, []);\r\n  const sendLocationData = async (location) => {\r\n    try {\r\n      console.log(\"Sending data to backend:\", location);\r\n\r\n      await axios.post(`${backendUrl}/locations`, location);\r\n      console.log(\"Location data sent successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error sending location data:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        style={styles.map}\r\n        region={{\r\n          latitude: currentLocation ? currentLocation.latitude : 0,\r\n          longitude: currentLocation ? currentLocation.longitude : 0,\r\n          latitudeDelta: 0.0922,\r\n          longitudeDelta: 0.0421,\r\n        }}\r\n      >\r\n        {currentLocation && (\r\n          <Marker coordinate={currentLocation} title=\"Your Location\" />\r\n        )}\r\n      </MapView>\r\n      {currentLocation && (\r\n        <Text style={styles.locationText}>\r\n          Latitude: {currentLocation.latitude}, Longitude:{\" \"}\r\n          {currentLocation.longitude}\r\n        </Text>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  map: {\r\n    flex: 1,\r\n  },\r\n  locationText: {\r\n    padding: 16,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}