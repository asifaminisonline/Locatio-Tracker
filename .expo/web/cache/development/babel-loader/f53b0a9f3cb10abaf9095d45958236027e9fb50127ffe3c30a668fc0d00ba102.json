{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MapScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var backendUrl = \"https://location-tracker-rtl.onrender.com\";\n  useEffect(function () {\n    var startWatchingLocation = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status === \"granted\") {\n          var locationSubscriber = yield Location.watchPositionAsync({\n            accuracy: Location.Accuracy.High,\n            timeInterval: 2000\n          }, function () {\n            var _ref3 = _asyncToGenerator(function* (newLocation) {\n              setLocation(newLocation.coords);\n              try {\n                console.log(\"Sending data to backend:\", newLocation.coords);\n                yield axios.post(`${backendUrl}/locations`, newLocation.coords);\n                console.log(\"Location data sent successfully!\");\n              } catch (error) {\n                console.error(\"Error sending location data:\", error.message);\n              }\n            });\n            return function (_x) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n          return function () {\n            if (locationSubscriber) {\n              locationSubscriber.remove();\n            }\n          };\n        }\n      });\n      return function startWatchingLocation() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    startWatchingLocation();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [location && _jsx(MapView, {\n      style: styles.map,\n      initialRegion: {\n        latitude: location.latitude,\n        longitude: location.longitude,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: _jsx(Marker, {\n        coordinate: {\n          latitude: location.latitude,\n          longitude: location.longitude\n        },\n        title: \"Your Location\"\n      })\n    }), location && _jsxs(Text, {\n      style: styles.locationText,\n      children: [\"Latitude: \", location.latitude, \", Longitude: \", location.longitude]\n    }), location && _jsx(Button, {\n      title: \"My Details\",\n      onPress: function onPress() {\n        return navigation.navigate(\"MyDetails\");\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    flex: 1\n  },\n  locationText: {\n    padding: 16,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","Button","MapView","Marker","Location","axios","jsx","_jsx","jsxs","_jsxs","MapScreen","_ref","navigation","_useState","_useState2","_slicedToArray","location","setLocation","backendUrl","startWatchingLocation","_ref2","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","locationSubscriber","watchPositionAsync","accuracy","Accuracy","High","timeInterval","_ref3","newLocation","coords","console","log","post","error","message","_x","apply","arguments","remove","style","styles","container","children","map","initialRegion","latitude","longitude","latitudeDelta","longitudeDelta","coordinate","title","locationText","onPress","navigate","create","flex","padding","textAlign"],"sources":["C:/Users/Asif Amin/Desktop/Location-Trackerrr/Locatio-Tracker/client/MapScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Text, Button } from \"react-native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport * as Location from \"expo-location\";\r\nimport axios from \"axios\"; // Import Axios\r\n\r\nexport default function MapScreen({ navigation }) {\r\n  const [location, setLocation] = useState(null);\r\n  const backendUrl = \"https://location-tracker-rtl.onrender.com\";\r\n\r\n  useEffect(() => {\r\n    // Request location permission and start watching for location updates\r\n    const startWatchingLocation = async () => {\r\n      const { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status === \"granted\") {\r\n        const locationSubscriber = await Location.watchPositionAsync(\r\n          {\r\n            accuracy: Location.Accuracy.High,\r\n            timeInterval: 2000, // Update every 1 seconds (adjust as needed)\r\n          },\r\n          async (newLocation) => {\r\n            setLocation(newLocation.coords);\r\n\r\n            // Send location data to the backend\r\n            try {\r\n              console.log(\"Sending data to backend:\", newLocation.coords);\r\n\r\n              await axios.post(`${backendUrl}/locations`, newLocation.coords);\r\n              console.log(\"Location data sent successfully!\");\r\n            } catch (error) {\r\n              console.error(\"Error sending location data:\", error.message);\r\n            }\r\n          }\r\n        );\r\n\r\n        // Clean up the location subscriber when the component unmounts\r\n        return () => {\r\n          if (locationSubscriber) {\r\n            locationSubscriber.remove();\r\n          }\r\n        };\r\n      }\r\n    };\r\n\r\n    startWatchingLocation();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {location && (\r\n        <MapView\r\n          style={styles.map}\r\n          initialRegion={{\r\n            latitude: location.latitude,\r\n            longitude: location.longitude,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          }}\r\n        >\r\n          <Marker\r\n            coordinate={{\r\n              latitude: location.latitude,\r\n              longitude: location.longitude,\r\n            }}\r\n            title=\"Your Location\"\r\n          />\r\n        </MapView>\r\n      )}\r\n      {location && (\r\n        <Text style={styles.locationText}>\r\n          Latitude: {location.latitude}, Longitude: {location.longitude}\r\n        </Text>\r\n      )}\r\n      {location && (\r\n        <Button\r\n          title=\"My Details\"\r\n          onPress={() => navigation.navigate(\"MyDetails\")}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  map: {\r\n    flex: 1,\r\n  },\r\n  locationText: {\r\n    padding: 16,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}